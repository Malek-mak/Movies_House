# Generated by Django 5.1.5 on 2025-09-17 02:27

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre_db',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre_name', models.CharField(choices=[('0', 'Action'), ('1', 'Crime'), ('2', 'Comedy'), ('3', 'Drama')], max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Movies_List_db',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('discription', models.TextField()),
                ('year', models.IntegerField(default=2000)),
                ('duration', models.IntegerField()),
                ('image', models.ImageField(upload_to='movie_poster/')),
                ('price', models.FloatField()),
                ('booked_out', models.CharField(choices=[('yes', 'Booked Out'), ('no', 'Available')], default='no', max_length=15)),
                ('rating', models.FloatField()),
                ('tickets_left', models.IntegerField(default=100)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('genre', models.ManyToManyField(to='Movies_House.genre_db')),
            ],
        ),
        migrations.CreateModel(
            name='PlayDates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('movie', models.ForeignKey(default='None', on_delete=django.db.models.deletion.CASCADE, related_name='showtimes', to='Movies_House.movies_list_db')),
            ],
        ),
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Tickets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seats', models.CharField(choices=[('1A', '1A'), ('1B', '1B'), ('1C', '1C'), ('1D', '1D'), ('1E', '1E'), ('1F', '1F'), ('1G', '1G'), ('1H', '1H'), ('1I', '1I'), ('1J', '1J'), ('2A', '2A'), ('2B', '2B'), ('2C', '2C'), ('2D', '2D'), ('2E', '2E'), ('2F', '2F'), ('2G', '2G'), ('2H', '2H'), ('2I', '2I'), ('2J', '2J'), ('3A', '3A'), ('3B', '3B'), ('3C', '3C'), ('3D', '3D'), ('3E', '3E'), ('3F', '3F'), ('3G', '3G'), ('3H', '3H'), ('3I', '3I'), ('3J', '3J'), ('4A', '4A'), ('4B', '4B'), ('4C', '4C'), ('4D', '4D'), ('4E', '4E'), ('4F', '4F'), ('4G', '4G'), ('4H', '4H'), ('4I', '4I'), ('4J', '4J'), ('5A', '5A'), ('5B', '5B'), ('5C', '5C'), ('5D', '5D'), ('5E', '5E'), ('5F', '5F'), ('5G', '5G'), ('5H', '5H'), ('5I', '5I'), ('5J', '5J'), ('6A', '6A'), ('6B', '6B'), ('6C', '6C'), ('6D', '6D'), ('6E', '6E'), ('6F', '6F'), ('6G', '6G'), ('6H', '6H'), ('6I', '6I'), ('6J', '6J'), ('7A', '7A'), ('7B', '7B'), ('7C', '7C'), ('7D', '7D'), ('7E', '7E'), ('7F', '7F'), ('7G', '7G'), ('7H', '7H'), ('7I', '7I'), ('7J', '7J'), ('8A', '8A'), ('8B', '8B'), ('8C', '8C'), ('8D', '8D'), ('8E', '8E'), ('8F', '8F'), ('8G', '8G'), ('8H', '8H'), ('8I', '8I'), ('8J', '8J'), ('9A', '9A'), ('9B', '9B'), ('9C', '9C'), ('9D', '9D'), ('9E', '9E'), ('9F', '9F'), ('9G', '9G'), ('9H', '9H'), ('9I', '9I'), ('9J', '9J'), ('10A', '10A'), ('10B', '10B'), ('10C', '10C'), ('10D', '10D'), ('10E', '10E'), ('10F', '10F'), ('10G', '10G'), ('10H', '10H'), ('10I', '10I'), ('10J', '10J')])),
                ('date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='Movies_House.playdates')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Movies_House.movies_list_db')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets_book', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
